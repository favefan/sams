# Generated by Django 2.2 on 2019-05-22 09:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_ID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='undef', max_length=200)),
                ('introduction', models.CharField(max_length=300)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('capacity', models.PositiveSmallIntegerField(default=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_ID', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='undef', max_length=50)),
                ('sex', models.BooleanField(choices=[(0, '男'), (1, '女')], default=0)),
                ('department', models.PositiveSmallIntegerField(default=0)),
                ('major', models.CharField(default='undef', max_length=50)),
                ('enroll_year', models.PositiveSmallIntegerField(default=0)),
                ('schooling_year', models.PositiveSmallIntegerField(default=4)),
                ('account_status', models.CharField(default='未创建', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Entrylist',
            fields=[
                ('entry_no', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('entry_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('awards', models.CharField(blank=True, max_length=200, null=True)),
                ('score_kind', models.CharField(blank=True, max_length=100, null=True)),
                ('score', models.FloatField(blank=True, default=0, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Activity')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Student')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Student'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
